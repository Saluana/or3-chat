/* Tailwind v4: single import includes preflight + utilities */
@import "tailwindcss";
@plugin "@tailwindcss/typography";

/* Nuxt UI base styles (load first so we can override its tokens below) */
@import "@nuxt/ui";

/* Tippy.js tooltips (used for mentions dropdown) */
@import "tippy.js/dist/tippy.css";

/* Ensure Tailwind scans files outside srcDir (e.g. root-level app.config.ts)
	so classes used in Nuxt UI theme overrides are generated. */
@source "../../../app.config.ts";


/* Your Material theme variable files (scoped: .light, .dark, etc.) */
@import "./theme.css";

/* Map Material variables to Nuxt UI tokens (loads last to win cascade) */
@import "~/assets/css/nuxt-ui-map.css";
@import "./retro.css"; /* shared retro utility classes */
@import "./mentions.css"; /* mentions plugin styles */

/* Font setup: body uses VT323, headings use Press Start 2P */
:root {
	/* Tailwind v4 token vars (optional for font utilities) */
	--font-sans: "VT323", ui-sans-serif, system-ui, sans-serif;
	--font-heading: "Press Start 2P", ui-sans-serif, system-ui, sans-serif;
	/* Dynamic current font choices (updated by theme settings) */
	--app-font-sans-current: var(--font-sans);
	--app-font-heading-current: var(--font-heading);
    --ui-radius: 3px;

	/* Theme customization variables (defaults mirror shipped design) */
	--app-font-size-root: 20px; /* base font size */
	/* Content background layer 1 */
	--app-content-bg-1: url('/bg-repeat.webp');
	--app-content-bg-1-opacity: 0.08;
	/* Content background layer 2 (overlay) */
	--app-content-bg-2: url('/bg-repeat-2.webp');
	--app-content-bg-2-opacity: 0.125;
	/* Repeat flag for content layers */
	--app-content-bg-repeat: repeat;
	/* Sidebar background */
	--app-sidebar-bg-1: url('/sidebar-repeater.webp');
	--app-sidebar-bg-1-opacity: 0.1;
	--app-sidebar-bg-repeat: repeat;
}

.font-ps2 {
	font-family: var(--font-heading) !important;
}

.font-vt323 {
	font-family: var(--font-sans) !important;
}

html, body {
	font-family: var(--app-font-sans-current, var(--font-sans)) !important;
    font-size: var(--app-font-size-root, 20px);
}

/* Reusable scrollbar style for inner scroll containers (Firefox specific props) */
.scrollbars {
	scrollbar-width: thin;
	scrollbar-color: var(--md-primary) transparent;
}

/* Hide scrollbar but keep scrolling (WebKit + Firefox) */
.scrollbar-hidden {
	scrollbar-width: none; /* Firefox */
	-ms-overflow-style: none; /* IE/Edge legacy */
}
.scrollbar-hidden::-webkit-scrollbar {
	width: 0;
	height: 0;
}

h1, h2, h3, h4, h5, h6, .font-heading {
	font-family: var(--app-font-heading-current, var(--font-heading)) !important;
}

.active-element {
	box-shadow: 0 0 0 var(--md-inverse-surface),
		inset 0 2px 0 rgba(0, 0, 0, 0.25),
		inset 0 -2px 0 rgba(255, 255, 255, 0.12);
}

.retro-shadow {
	box-shadow: 2px 2px 0 var(--md-inverse-surface);
}

/* Global thin colored scrollbars (WebKit + Firefox) */
/* Firefox */
html {
	scrollbar-width: thin;
	/* thumb color, then track color */
	scrollbar-color: var(--md-primary) transparent;
}

/* WebKit (Chromium, Safari) */
/* Apply to all scrollable elements */
*::-webkit-scrollbar {
	width: 8px;
	height: 8px;
}
*::-webkit-scrollbar-track {
	background: transparent;
	border-radius: 9999px;
}
*::-webkit-scrollbar-thumb {
	background: var(--md-primary);
	border-radius: 9999px;
	border: 2px solid transparent; /* creates padding so the thumb appears thinner */
	background-clip: padding-box;
}
*::-webkit-scrollbar-thumb:hover {
	background: color-mix(in oklab, var(--md-primary) 85%, black);
}
*::-webkit-scrollbar-corner { background: transparent; }

/* Hardcoded header pattern repeating horizontally */
.header-pattern-flipped {
    background-color: var(--md-surface-variant);
    background-image: url('/gradient-x-sm.webp');
    rotate: 180deg;
    background-repeat: repeat-x;
    background-position: left center;
    background-size: auto 100%;
}

/* Hardcoded header pattern repeating horizontally */
.header-pattern {
    background-color: var(--md-surface-variant);
    background-image: url('/gradient-x-sm.webp');
    background-repeat: repeat-x;
    background-position: left center;
    background-size: auto 100%;
}

/* Typography plugin sets its own strong color; ensure dark mode bold text uses on-surface token */
.dark .prose strong,
.dark .prosemirror-host :where(.ProseMirror) strong {
	color: var(--md-on-surface);
}

.hljs {
	background: transparent !important; /* override highlight.js default bg so it works in dark mode */
}