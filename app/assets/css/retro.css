/*
	Retro dashboard utility classes
	--------------------------------
	- Exported globally so dashboard modules share identical visuals.
	- Extend styles by stacking an extra class (e.g. `.retro-chip.my-variant`).
	- Do not duplicate these selectors in component-scoped blocks—update here instead.
	- Documented for plugin authors in `docs/UI/dashboard-plugins.md`.
*/

/* Screen-reader only helper (follows inclusive components pattern) */
.sr-only {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0 0 0 0);
	clip-path: inset(50%);
	white-space: nowrap;
	border: 0;
}

/* Retro “chip” toggle button used across dashboard settings */
.retro-chip {
	display: inline-flex;
	align-items: center;
	justify-content: center;
	padding: 0.25rem 0.5rem;
	font-size: 0.75rem;
	font-weight: 500;
	user-select: none;
	border: 2px solid var(--md-inverse-surface);
	box-shadow: 2px 2px 0 var(--md-inverse-surface);
	border-radius: 3px;
	background: var(--md-surface);
	color: var(--md-on-surface);
	line-height: 1;
	transition: background-color 120ms ease, color 120ms ease,
		transform 80ms ease, box-shadow 80ms ease;
}
.retro-chip:hover {
	background: var(--md-secondary-container);
	color: var(--md-on-secondary-container);
}
.retro-chip:active {
	transform: translate(2px, 2px);
	box-shadow: 0 0 0 var(--md-inverse-surface);
}
.retro-chip.active {
	background: var(--md-primary-container);
	color: var(--md-on-primary-container);
}
.retro-chip:focus-visible {
	outline: 2px solid var(--md-primary);
	outline-offset: 2px;
}

/* Retro text inputs (text + number inputs share the same base look) */
.retro-input {
	height: 32px;
	padding: 0 6px;
	font-size: 12px;
	font-family: inherit;
	line-height: 1;
	border: 2px solid var(--md-inverse-surface);
	background: var(--md-surface);
	color: var(--md-on-surface);
	border-radius: 3px;
	box-shadow: 2px 2px 0 var(--md-inverse-surface);
}
.retro-input:focus-visible {
	outline: 2px solid var(--md-primary);
	outline-offset: 2px;
}
textarea.retro-input {
	height: auto;
	padding-top: 6px;
	padding-bottom: 6px;
	line-height: 1.25;
}
.retro-input:disabled {
	opacity: 0.5;
	cursor: not-allowed;
}

/* Primary retro button scaffold (used with Nuxt UI buttons) */
.retro-btn {
	display: inline-flex;
	align-items: center;
	justify-content: center;
	line-height: 1;
	position: relative;
	border-radius: 3px;
	border: 2px solid var(--md-inverse-surface);
	box-shadow: 2px 2px 0 var(--md-inverse-surface);
	transition: transform 80ms ease, box-shadow 80ms ease;
}
.retro-btn.aspect-square {
	padding: 0;
	place-items: center;
}
.retro-btn:active {
	transform: translate(2px, 2px);
	box-shadow: 0 0 0 var(--md-inverse-surface),
		inset 0 2px 0 rgba(0, 0, 0, 0.25),
		inset 0 -2px 0 rgba(255, 255, 255, 0.12);
}
.retro-btn:focus-visible {
	outline: 2px solid var(--md-primary);
	outline-offset: 2px;
}
.retro-btn:disabled {
	opacity: 0.45;
	cursor: not-allowed;
	box-shadow: 2px 2px 0 color-mix(in oklab, var(--md-inverse-surface) 70%, transparent 30%);
}

/* Iconic copy button variant used in theme palette rows */
.retro-btn-copy {
	height: 32px;
	padding: 0 8px;
	font-size: 10px;
	line-height: 1;
	border: 2px solid var(--md-inverse-surface);
	border-radius: 3px;
	background: var(--md-secondary-container);
	color: var(--md-on-secondary-container);
	box-shadow: 2px 2px 0 var(--md-inverse-surface);
	cursor: pointer;
	transition: transform 80ms ease, box-shadow 80ms ease,
		background-color 120ms ease, color 120ms ease;
}
.retro-btn-copy:disabled {
	opacity: 0.4;
	cursor: not-allowed;
}
.retro-btn-copy:active:not(:disabled) {
	transform: translate(2px, 2px);
	box-shadow: 0 0 0 var(--md-inverse-surface);
}
.retro-btn-copy:focus-visible {
	outline: 2px solid var(--md-primary);
	outline-offset: 2px;
}

/* Shared motion reduction: keep retro UI snappy yet accessible */
@media (prefers-reduced-motion: reduce) {
	.retro-chip,
	.retro-btn,
	.retro-btn-copy,
	.retro-input {
		transition: none;
		transform: none;
	}
}